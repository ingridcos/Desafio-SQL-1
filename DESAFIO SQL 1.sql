DROP TABLE IF EXISTS CLIENTES;
DROP TABLE IF EXISTS PEDIDOS;
DROP TABLE IF EXISTS PRODUTOS;

CREATE TABLE ALUNOS (
ID_ALUNO INT PRIMARY KEY,
NOME_ALUNO VARCHAR(150),
EMAIL VARCHAR(100),
DATA_INGRESSO DATE
);
CREATE TABLE CURSOS (
ID_CURSO INT PRIMARY KEY,
NOME_CURSO VARCHAR(100),
DEPARTAMENTO VARCHAR(100),
CREDITOS INT
);

CREATE TABLE MATRICULAS (
ID_MATRICULA INT PRIMARY KEY,
ID_ALUNO INT,
ID_CURSO INT,
NOTA_FINAL DECIMAL(4, 2),
FOREIGN KEY (ID_ALUNO) REFERENCES ALUNOS(ID_ALUNO),
FOREIGN KEY (ID_CURSO) REFERENCES CURSOS(ID_CURSO)
);

INSERT INTO ALUNOS (ID_ALUNO, NOME_ALUNO, EMAIL, DATA_INGRESSO) 
VALUES
(1, 'Lucas Martins', 'lucas.m@email.com', '2023-02-01'),
(2, 'Sofia Pereira', 'sofia.p@email.com', '2023-02-01'),
(3, 'Mariana Costa', 'mariana.c@email.com', '2022-08-01'),
(4, 'Rafael Santos', 'rafael.s@email.com', '2024-02-01');

INSERT INTO CURSOS (ID_CURSO, NOME_CURSO, DEPARTAMENTO, CREDITOS) 
VALUES
(101, 'Algoritmos e Programação', 'Ciência da Computação', 4),
(102, 'Cálculo I', 'Matemática', 6),
(103, 'Administração de Empresas', 'Gestão', 4),
(104, 'Estrutura de Dados', 'Ciência da Computação', 6);
INSERT INTO MATRICULAS (ID_MATRICULA, ID_ALUNO, ID_CURSO, NOTA_FINAL) VALUES
(1, 1, 101, 8.5),
(2, 1, 102, 7.0),
(3, 2, 101, 9.0),
(4, 2, 104, 8.8),
(5, 3, 103, 6.5);

-----PARTE_1----

---1---

SELECT * FROM ALUNOS;

----2---

SELECT NOME_CURSO, DEPARTAMENTO FROM CURSOS; 

---3---

SELECT NOME_CURSO, CREDITOS FROM CURSOS WHERE CREDITOS >4;

---4---

SELECT NOME_ALUNO, EMAIL FROM ALUNOS WHERE DATA_INGRESSO >= '2023-01-01';

---5---

SELECT ALUNOS.NOME_ALUNO, MATRICULAS.NOTA_FINAL 
FROM MATRICULAS 
JOIN ALUNOS ON MATRICULAS.ID_ALUNO = ALUNOS.ID_ALUNO
WHERE MATRICULAS.ID_ALUNO = 1 AND MATRICULAS.NOTA_FINAL >= 7.0 
ORDER BY MATRICULAS.NOTA_FINAL DESC;

---PARTE_2---

---1---

SELECT DISTINCT CURSOS.DEPARTAMENTO
FROM CURSOS;

---2---

SELECT ID_MATRICULA, 
CASE WHEN NOTA_FINAL >= 7.0 THEN 'Aprovado' ELSE 'Reprovado' END AS STATUS 
FROM MATRICULAS;

----3----

SELECT NOME_CURSO, CREDITOS FROM CURSOS ORDER BY CREDITOS DESC LIMIT 1;

----PARTE_3----

----1 ---

SELECT COUNT(*) AS Total_Matriculas, AVG(NOTA_FINAL) AS Media_Geral FROM MATRICULAS;

----2---

SELECT DEPARTAMENTO, COUNT(*) AS Total_Cursos FROM CURSOS GROUP BY DEPARTAMENTO;

---3---

SELECT DEPARTAMENTO, COUNT(*) AS Total_Cursos 
FROM CURSOS 
GROUP BY DEPARTAMENTO 
HAVING COUNT(*) > 1;

----PARTE_4----

----1----
SELECT ALUNOS.NOME_ALUNO, CURSOS.NOME_CURSO, MATRICULAS.NOTA_FINAL 
FROM MATRICULAS 
JOIN ALUNOS ON MATRICULAS.ID_ALUNO = ALUNOS.ID_ALUNO 
JOIN CURSOS ON MATRICULAS.ID_CURSO = CURSOS.ID_CURSO;

----2---
SELECT ALUNOS.NOME_ALUNO 
FROM ALUNOS 
LEFT JOIN MATRICULAS ON ALUNOS.ID_ALUNO = MATRICULAS.ID_ALUNO 
WHERE MATRICULAS.ID_ALUNO IS NULL;

-----3-----
SELECT ALUNOS.NOME_ALUNO, ROUND(AVG(MATRICULAS.NOTA_FINAL), 2) AS MEDIA_NOTAS 
FROM ALUNOS 
JOIN MATRICULAS ON ALUNOS.ID_ALUNO = MATRICULAS.ID_ALUNO 
GROUP BY ALUNOS.NOME_ALUNO 
ORDER BY MEDIA_NOTAS DESC 
LIMIT 1;





